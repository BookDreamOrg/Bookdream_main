<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrderitemDAO">

	<!-- 장바구니에서 선택한 상품 표기 -->
	<select id="getOrderitemList" resultType="HashMap">
		SELECT c.cart_no, 
			   u.user_no, 
			   b.book_no, 
			   b.book_img, 
			   b.title, 
			   b.book_price, 
			   c.product_count
		FROM   cart c, 
			   users u, 
			   book b
		WHERE  c.book_no = b.book_no AND
               u.user_no = c.user_no AND 
			   u.user_no = ${user_no} AND
               c.cart_no IN (
		        <foreach collection="arrCart" item="item" index="index" separator=",">
		            ${item}
		        </foreach>               
               )
		ORDER BY cart_no	
	</select>

	<!-- 장바구니에서 선택한 상품의 개수, 총 가격, 종류  -->
	<select id="getOrderitemCount" resultType="HashMap">
		SELECT sum(product_count) as total_count, 
			   count(*) as col_count, 
			   sum(c.product_count * b.book_price) as total_price
		FROM   cart c, 
			   users u, 
			   book b
		WHERE  c.book_no = b.book_no AND   
			   u.user_no = c.user_no AND
			   u.user_no = #{user_no} AND
               c.cart_no IN (
		        <foreach collection="arrCart" item="item" index="index" separator=",">
		            ${item}
		        </foreach>               
               )			   
	</select>
	
	<!-- 바로구매에서 결제화면으로 전송함 -->
	<select id="getBuyNow" resultType="HashMap">
		SELECT b.book_no,
			   b.book_img, 
			   b.title, 
			   b.book_price   
		FROM   users u, 
			   book b
		WHERE  u.user_no = #{user_no} AND
			   b.book_no = #{book_no}
	</select>
		
	<!-- 구입한 상품 장바구니 제거 (장바구니만)-->
	<delete id="deleteCartList">
		DELETE
		FROM (select u.user_no, 
					 c.cart_no
	    	  from   users u, 
	    	         book b, 
	    	         cart c
        	  where  u.user_no = c.user_no AND 
        	         c.book_no = b.book_no AND
        	         c.cart_no IN (
			        <foreach collection="arrCart" item="item" index="index" separator=",">
			            ${item}
			        </foreach>         	         
        	         )
        	 )      
		WHERE user_no = #{user_no}
	</delete>
	
	
	<!-- 결제 후 포인트 정산 -->
	<update id="updateUserPoint">
		UPDATE users u
		SET    user_point = (select (user_point - (use_point - save_point)) as user_point
                  			 from    
                  			 		 pay p
                  			 where   user_no = #{user_no} AND 
                  			 		 pay_no = #{pay_no}
                  			 )
		WHERE  exists (select 1 
         		       from  
         		       		  pay p 
             	       where  user_no = #{user_no} AND 
             	       		  pay_no = #{pay_no}
             	      ) 	
	</update>
</mapper>

