<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="OrderitemDAO">

	<resultMap type="orderitem" id="orderitemList">
		<result property="cart_no" column="CART_NO" />
		<result property="user_no" column="USER_NO" />	
		<result property="book_no" column="BOOK_NO" />	
		<result property="total_count" column="TOTAL_COUNT" />	
		<result property="product_count" column="PRODUCT_COUNT" />	
		<result property="col_count" column="COL_COUNT" />	
		<result property="total_price" column="TOTAL_PRICE" />			
		<result property="buy_now" column="BUY_NOW" />			
		<collection property="userVO" resultMap="userList"></collection>		
		<collection property="bookVO" resultMap="bookList"></collection>
	</resultMap>	

	<resultMap type="user" id="userList">
		<result property="user_no" column="USER_NO" />
		<result property="user_point" column="USER_POINT" />
	</resultMap>

	<resultMap type="book" id="bookList">
		<result property="book_no" column="BOOK_NO"/>
		<result property="title" column="TITLE" />
		<result property="author" column="AUTHOR" />
		<result property="publisher" column="PUBLISHER" />
		<result property="book_price" column="BOOK_PRICE" />
		<result property="book_img" column="BOOK_IMG" />		
	</resultMap>


	<!-- 장바구니의 상품을 결제화면으로 전송함 -->	
	<!-- user_no 변경필요 -->
	<select id="getOrderitemList" parameterType="orderitem" resultMap="orderitemList">
	<![CDATA[
		SELECT c.cart_no, 
			   u.user_no, 
			   b.book_no, 
			   b.book_img, 
			   b.title, 
			   b.book_price, 
			   c.product_count
		FROM   cart c, 
			   users u, 
			   book b
		WHERE  c.book_no = b.book_no AND 
			   u.user_no = c.user_no AND 
			   u.user_no = #{user_no}
		order by cart_no
	]]>
	</select>

	<!-- 장바구니의 상품 개수, 종류, 가격을 전송함  -->
	<!-- user_no 변경필요 -->
	<select id="getOrderitemCount" parameterType="orderitem" resultMap="orderitemList">
	<![CDATA[
		SELECT sum(product_count) as total_count, 
			   count(*) as col_count, 
			   sum(c.product_count * b.book_price) as total_price
		FROM   cart c, 
			   users u, 
			   book b
		WHERE  c.book_no = b.book_no AND   
			   u.user_no = c.user_no AND
			   u.user_no = #{user_no}
	]]>
	</select>
	
	<!-- 바로구매에서 결제화면으로 전송함 -->
	<select id="getBuyNow" parameterType="orderitem" resultMap="orderitemList">
		SELECT b.book_no,
			   b.book_img, 
			   b.title, 
			   b.book_price   
		FROM   users u, 
			   book b
		WHERE  u.user_no = #{user_no} AND
			   b.book_no = #{book_no}
	</select>
	
	

	<!-- user_no 변경필요 -->
	<!-- 사용자의 적립금 호출 -->
	<select id="userPoint" parameterType="orderitem" resultMap="orderitemList">
		SELECT user_point   
		FROM   users
		WHERE  user_no = #{user_no}
	</select>
	
	<!-- 구입한 상품 재고차감 -->
	<!-- user_no 변경필요 -->	
	<update id="updateBookStock">
		UPDATE book b
		SET    b.stock = (select (b.stock - c.product_count) as stock
                 		  from  cart c, 
                 		  		users u
                 		  where c.book_no = b.book_no AND 
                 		  		u.user_no = c.user_no AND
                 		  		u.user_no = #{user_no}
                 		  )
                  
		WHERE  exists (select 1
              		   from    cart c, 
              		   		   users u
               		   where   c.book_no = b.book_no AND 
               		   		   u.user_no = c.user_no AND
               		   		   u.user_no = #{user_no}
               		   )
	
	</update>

	<!-- 구입한 상품 장바구니 제거 -->
	<!-- user_no 변경필요 -->	
	<delete id="deleteCartList">
		DELETE
		FROM (select u.user_no, 
					 c.cart_no
	    	  from   users u, 
	    	         book b, 
	    	         cart c
        	  where  u.user_no = c.user_no AND 
        	         c.book_no = b.book_no
        	 )      
		WHERE user_no = #{user_no}
	</delete>
	
	<!-- 사용자의 포인트 계산 -->
	<!-- user_no 변경필요 -->
	<update id="updateUserPoint">
		UPDATE users
		SET    user_point = (select (user_point - (use_point - save_point)) as user_point
                  			 from    users u, 
                  			 		 pay p
                  			 where   user_no = #{user_no} AND 
                  			 		 pay_no = #{pay_no}
                  			 )
		WHERE  exists (select 1 
         		       from   users u, 
         		       		  pay p 
             	       where  user_no = #{user_no} AND 
             	       		  pay_no = #{pay_no}
             	      ) 	
	</update>
</mapper>

